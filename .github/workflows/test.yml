name: Multi-Platform Tests # Renamed for clarity

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Build Platform'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - macos
          - windows
          - linux
  push:
    tags:
      - 'v*'

jobs:
  test_linux:
    name: Linux Test Matrix (${{ matrix.distro }}) # Add matrix value to job name
    # Run if platform is 'all' or 'linux', OR if triggered by tag push (which doesn't have inputs)
    if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'linux'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false # Optional: prevent other matrix jobs from being cancelled if one fails
      matrix:
        distro: [debian, centos, archlinux, opensuse, alpine]
    steps:
      - uses: actions/checkout@v4
      - name: Run Linux tests on ${{ matrix.distro }}
        # Pass the distro name as an argument to the script
        run: |
          chmod +x ./linux.sh
          ./linux.sh

  test_windows:
    name: Windows Test
    # Run if platform is 'all' or 'windows', OR if triggered by tag push
    if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'windows'
    strategy:
      matrix:
        os: [windows-2022, windows-2019]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Run Windows tests
        shell: pwsh
        run: |
          .\windows.ps1

  test_macos:
    name: macOS Test
    # Run if platform is 'all' or 'macos', OR if triggered by tag push
    if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'macos'
    strategy:
      matrix:
        arch: [arm64, x64]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up architecture
        run: |
          echo "Running on ${{ matrix.arch }} architecture"
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            echo "This is an Apple Silicon (M1/M2) Mac"
          else
            echo "This is an Intel-based Mac"
          fi
      - name: Run macOS tests
        run: |
          chmod +x ./macos.sh
          ./macos.sh

  test_docker:
    name: Docker Test (Alpine)
    # Run if platform is 'all' or 'docker', OR if triggered by tag push
    if: github.event_name == 'push' || github.event.inputs.platform == 'all' || github.event.inputs.platform == 'docker'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run tests in Docker debian container
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE":/app -w /app debian:latest /bin/bash -c 'chmod +x /app/linux.sh && /app/linux.sh'
      - name: Run tests in Docker centos container
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE":/app -w /app centos:7 /bin/bash -c 'chmod +x /app/linux.sh && /app/linux.sh'
      - name: Run tests in Docker archlinux container
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE":/app -w /app archlinux:latest /bin/bash -c 'chmod +x /app/linux.sh && /app/linux.sh'
      - name: Run tests in Docker opensuse container
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE":/app -w /app opensuse/leap:latest /bin/bash -c 'chmod +x /app/linux.sh && /app/linux.sh'
      - name: Run tests in Docker alpine container
        run: |
          docker run --rm -v "$GITHUB_WORKSPACE":/app -w /app alpine:latest /bin/sh -c 'sed -i "s|http://dl-cdn.alpinelinux.org|https://mirrors.aliyun.com|g" /etc/apk/repositories && apk update && apk add bash && chmod +x /app/linux.sh && /app/linux.sh'